h1. Chimpactions

Easily move contacts between MailChimp lists in your Rails 3 application.

h2. Requirements

A MailChimp account and "API key":http://admin.mailchimp.com/account/api.

h2. Installation

h3. Base

# *_Gemfile_* -> <code>gem "chimpactions", "~> 0.0.1"</code>
# <code>rails generate chimpactions:install</code>
# _Edit config/chimpactions.yml_ with your information.
# add <code>include Chimpactions::Subscriber</code> to your model.
# add <code>after_save :chimpactions </code> (if that's what you want) to your model.

The YourModel.chimpactions method fires the actions to move subscribers as specified.

Generates: 
* config/chimpactions.yml config file

h3. ActiveRecord store

<code>rails generate chimpactions:migration </code>

<code> rake db:migrate </code>

Generates:
* chimpactions ActiveRecord migration

h3. Customizing Admin

Chimpactions provides a basic scaffold for managing ActiveRecord Actions @ http:yourapp/chimpactions.
To override the gem views :

<code>rails generate chimpactions:customize </code>

Generates: 

* chimpactions view files for administrative interface
* yourapp/app/views/chimpactions

h2. Configuration

_See installed config/chimpactions.yml for configuration options_

h2. Usage

h3. What's available

Once defined (in chimpactions.yml) the local Rails model inherits the following methods from the Chimpactions gem :
* add_to(List)
* move_to(List)
* remove_from(List)

h3. A Chimpaction :

*WHENN (A model method/attribute) IS (<,>,=) VALUE, ACTION (Chimpactions method) LIST (One of your MailChimp Lists)*

ex.

 'When a user has more than 50 posts, move them to the Power Poster list'

*_in chimpactions.yml_*
<pre><code>  action:
    -
    action: :move_to,
    list: Power Posters,
    whenn: posts.count,
    is: >,
    value: 50
    -
</code></pre>

*_for ActiveRecord store_* 
 The admin interface should be a straightforward representation. 

h3. Administrative Interface

Direct your browser to http://yourapp.chimpactions for a simple CRUD to build and manage Actions.
Available values are set in the forms where applicable, validations will tell you if a value won't work.

h3. Manual access

You can move subscribers around arbitrarily as well:

<pre><code>user = User.find(123)
user.remove_from("Power Posters") 
</code></pre>

h3. Chimpactions Module

All your lists with a ton of info: 
<pre><code>@lists = Chimpactions.available_lists
...view
<%= var_dump(@lists) ->
</code></pre>

Calling the MailChimp API directly: 

Direct access to the "gibbon":http://rubygems.org/gems/gibbon/ socket :
<pre><code>api_result = Chimpactions.socket.campaigns({:start => 0, :limit => 100})
</code></pre>

h2. TODO

* implement VCR for tests so we don't have to use a real API key
* get loading don't so we don't have to add <code>include Chimpactions::Subscriber</code> in the model

h2. License

This project released under the MIT-LICENSE.

h2. Thanks

p. Made possible by the generous support of the "MailChimp Integration Fund":http://www.mailchimp.com/about/integration-fund/ .

h2. Copyrights

(c) circuitllc & "imgenius":http://imgeni.us 2011 - Released under the MIT license.


