{"name":"ChimpActions Gem","body":"## Requirements\r\n\r\nA [MailChimp account](http://chimpchamp.com/mc) and [API key](http://admin.mailchimp.com/account/api).\r\n\r\n## Installation\r\n\r\n### Base\r\n\r\n1. _**Gemfile**_ -> <pre>gem \"chimpactions\", \"~> 0.0.1\"</pre>\r\n\r\n1. Install: <pre>rails generate chimpactions:install</pre>\r\n\r\n1. _Edit config/chimpactions.yml_ with your information.\r\n\r\n1. add \"Subscriber\" to your model:<pre>include Chimpactions::Subscriber</pre>\r\n\r\n1. (If you want) add to your model: <pre>after_save :chimpactions</pre>\r\n\r\nThe YourModel.chimpactions method fires the actions to move subscribers as specified.\r\n\r\nGenerates: \r\n* config/chimpactions.yml config file\r\n\r\n### ActiveRecord store\r\n\r\n<pre>rails generate chimpactions:migration </pre>\r\n\r\n<pre> rake db:migrate </pre>\r\n\r\nGenerates:\r\n* chimpactions ActiveRecord migration\r\n\r\n### Customizing Admin\r\n\r\nChimpactions provides a basic scaffold for managing ActiveRecord Actions @ http:yourapp/chimpactions.\r\nTo override the gem views :\r\n\r\n<pre>rails generate chimpactions:customize </pre>\r\n\r\nGenerates: \r\n\r\n* chimpactions view files for administrative interface\r\n* yourapp/app/views/chimpactions\r\n\r\n## Configuration\r\n\r\n_See installed config/chimpactions.yml for configuration options_\r\n\r\n## Usage\r\n\r\n### What's available\r\n\r\nOnce defined (in chimpactions.yml) the local Rails model inherits the following methods from the Chimpactions gem :\r\n* add_to(List)\r\n* move_to(List)\r\n* remove_from(List)\r\n\r\n### A Chimpaction :\r\n\r\n**WHENN (A model method/attribute) IS (<,>,=) VALUE, ACTION (Chimpactions method) LIST (One of your MailChimp Lists)**\r\n\r\nex.\r\n\r\n 'When a user has more than 50 posts, move them to the Power Poster list'\r\n\r\n_**in chimpactions.yml**_\r\n<pre>  action:\r\n    -\r\n    action: :move_to,\r\n    list: Power Posters,\r\n    whenn: posts.count,\r\n    is: >,\r\n    value: 50\r\n    -\r\n</pre>\r\n\r\n**_for ActiveRecord store_**\r\n \r\n The admin interface should be a straightforward representation. \r\n\r\n### Administrative Interface\r\n\r\nDirect your browser to http://yourapp.chimpactions for a simple CRUD to build and manage Actions.\r\nAvailable values are set in the forms where applicable, validations will tell you if a value won't work.\r\n\r\n### Manual access\r\n\r\nYou can move subscribers around arbitrarily as well:\r\n\r\n<pre>user = User.find(123)\r\nuser.remove_from(\"Power Posters\") \r\n</pre>\r\n\r\n### Chimpactions Module\r\n\r\nAll your lists with a ton of info: \r\n<pre>@lists = Chimpactions.available_lists\r\n...view\r\n<%= var_dump(@lists) ->\r\n</pre>\r\n\r\nCalling the MailChimp API directly: \r\n\r\nDirect access to the \"gibbon\":http://rubygems.org/gems/gibbon/ socket :\r\n<pre>api_result = Chimpactions.socket.campaigns({:start => 0, :limit => 100})\r\n</pre>\r\n\r\n\r\n### Webhooks\r\n\r\nTo register your application with your MailChimp List direct your browser to : http://yourapp/chimpactions/webhooks\r\n\r\nThe links next to each list will add/delete the webhook http://yourapp/chimpactions/receive to that list.\r\n\r\nYou must handle the post itself in <pre> receive_webhook(mc_post_data) </pre> in your mix-in model for it have an effect.\r\n\r\n\r\n## TODO\r\n\r\n* Implement VCR for tests so we don't have to use a real API key\r\n* Get loading so we don't have to add <pre>include Chimpactions::Subscriber</pre> in the model\r\n\r\n## License\r\n\r\nThis project released under the MIT-LICENSE.\r\n\r\n## Thanks\r\n\r\nMade possible by the generous support of the [MailChimp Integration Fund](http://www.mailchimp.com/about/integration-fund/).\r\n\r\n## Copyrights\r\n\r\n(c) [ChimpChamp](http://chimpchamp.com) 2011 - 2012 - Released under the MIT license.","tagline":"Move subscribers between MailChimp lists quickly.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}